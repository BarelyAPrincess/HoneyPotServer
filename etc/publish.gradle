// child script to publish to a maven repo
apply plugin: 'maven-publish'

// allow javadoc archive on Java 8 even if the javadoc isn't complete
if ( JavaVersion.current().isJava8Compatible() )
{
	allprojects {
		tasks.withType( Javadoc ) {
			options.addStringOption( 'Xdoclint:none', '-quiet' )
		}
	}
}

// source jar
task sourcesJar( type: Jar ) {
	classifier = 'sources'
	from sourceSets.main.java.srcDirs
}

// javadoc jar
task javadocJar( type: Jar, dependsOn: javadoc ) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

publishing {
	publications {
		maven( MavenPublication ) {
			pom.withXml {
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name project.name
					description description
					url 'https://github.com/TheAmeliaDeWitt/HoneyPotServer'
					scm {
						url 'https://github.com/TheAmeliaDeWitt/HoneyPotServer'
						connection 'scm:git:ssh:git@github.com:TheAmeliaDeWitt/HoneyPotServer.git'
						developerConnection 'scm:git:ssh:git@github.com:TheAmeliaDeWitt/HoneyPotServer.git'
					}
					licenses {
						license {
							name 'MIT License'
							url 'https://opensource.org/licenses/MIT'
							distribution 'repo'
						}
					}
					developers {
						developer {
							id 'TheAmeliaDeWitt'
							name 'Amelia DeWitt'
							email 'me@ameliadewitt.com'
						}
					}
				}
			}

			artifact jar
			artifact sourcesJar
			artifact javadocJar

			repositories {
				maven {
					// credentials
					credentials {
						username System.getenv( "publishUser" )
						password System.getenv( "publishPass" )
					}
					// url depends on version
					if ( System.getenv( "releaseBuild" ) != null )
					{
						url = 'http://jenkins.ameliadewitt.com:8081/artifactory/releases/'
					}
					else
					{
						url = 'http://jenkins.ameliadewitt.com:8081/artifactory/snapshots/'
					}
				}
			}
		}
	}
}
